name: release

on:
  push:
    tags:
      - v*

env:
  IMAGE_NAME: ghcr.io/{{ .AppOwner }}/{{ .AppName }}

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # pin@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # pin@v2.4.1

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # pin@v4.3.0
        with:
          images: ${{`{{ env.IMAGE_NAME }}`}}
          tags: |
            type=semver,pattern={{`{{version}}`}}
            type=semver,pattern={{`{{major}}`}}.{{`{{minor}}`}}

      - name: Log in to the container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # pin@v2.1.0
        with:
          registry: ghcr.io
          username: ${{`{{ github.actor }}`}}
          password: ${{`{{ secrets.GITHUB_TOKEN }}`}}

      - name: Build and push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # pin@v4.0.0
        with:
          push: true
          build-args: |
            APP_TARGET=full
          context: .
          cache-from: |
            type=registry,ref=${{`{{ env.IMAGE_NAME }}`}}:latest
            type=registry,ref=${{`{{ env.IMAGE_NAME }}`}}:buildcache
          cache-to: |
            type=registry,ref=${{`{{ env.IMAGE_NAME }}`}}:buildcache,mode=max
          labels: ${{`{{ steps.meta.outputs.labels }}`}}
          platforms: |
            linux/amd64
            linux/arm64
          tags: ${{`{{ steps.meta.outputs.tags }}`}}
          target: full

      - name: Set up Cosign
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65 # pin@v3.0.1

      - name: Sign images
        run: echo "$TAGS" | xargs -n1 -d '\n' cosign sign --recursive --yes
        env:
          TAGS: ${{`{{ steps.meta.outputs.tags }}`}}

      - name: Verify images
        # cspell: words oidc
        run: |
          echo "$TAGS" | xargs -n1 -d '\n' -I {} cosign verify {} \
            --certificate-oidc-issuer="https://token.actions.githubusercontent.com" \
            --certificate-identity-regexp="https://github.com/gostamp/docker-ubuntu/.github/workflows/release.yml"
        env:
          TAGS: ${{`{{ steps.meta.outputs.tags }}`}}
